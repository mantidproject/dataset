version: '{build}'
os: Visual Studio 2019
      
matrix:
  fast_finish: true
  
platform:
  - x64

configuration:
  - Release

environment:
  PYTHON_VERSION: 3.6
  MINICONDA: C:\Miniconda36-x64
  APPVEYOR_SAVE_CACHE_ON_ERROR: true
  CLCACHE_HARDLINK: 1
  
cache: C:\Users\appveyor\clcache -> appveyor.yml


install:
# For branches not associated with a PR - we exit appveyor
- git config --add remote.origin.fetch +refs/pull/*/head:refs/remotes/origin/pull/*
- git fetch origin
- ps: '$env:has_pr = git branch --remote --contains HEAD | find origin/pull'
- ps: Write-Output $env:has_pr 
- ps: if (!$has_pr) {Exit-AppveyorBuild}
- echo install started %time%
- cd %APPVEYOR_BUILD_FOLDER%
- git submodule update --init
- mkdir build
- cd build
- set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%"
- call %MINICONDA%\\python.exe -m pip install clcache
- call %MINICONDA%\\python.exe -m pip install checksumdir
- clcache.exe -s
- call "c://Program Files (x86)//Microsoft Visual Studio 14.0//VC//vcvarsall.bat"
- echo install finished %time%

build_script:
- echo build started %time%
- cmake -G "Visual Studio 16 2019" -A x64 -DCLCACHE_PATH=%MINICONDA%/Scripts -DPYTHON_EXECUTABLE=%MINICONDA%/python.exe -DCMAKE_INSTALL_PREFIX=../install ..
- cmake --build . --config %CONFIGURATION% --target install all-tests
- echo build finished %time%
- clcache.exe -s
- python ..\appveyor\checksum_clcache.py 

test_script:
- echo tests started %time%
- '%APPVEYOR_BUILD_FOLDER%\build\common\test\%CONFIGURATION%\scipp-common-test.exe'
- '%APPVEYOR_BUILD_FOLDER%\build\core\test\%CONFIGURATION%\scipp-core-test.exe'
- '%APPVEYOR_BUILD_FOLDER%\build\neutron\test\%CONFIGURATION%\scipp-neutron-test.exe'
- '%APPVEYOR_BUILD_FOLDER%\build\units\test\%CONFIGURATION%\scipp-units-test.exe'
- C:\Python36-x64\python.exe -m pip install -r ..\python\requirements.txt
- set PYTHONPATH=%PYTHONPATH%;..\install
- C:\Python36-x64\python.exe -m pytest ..\python
- echo tests finished %time%

for:
- 
  branches:
      only:
         - master

  init:
  - echo skipping init checks
  
  build_script:
  # Build step would take too long
  - echo skipping build step 
  
  test_script: 
  # Test step would take too long
  - echo skipping test step 

  deploy_script:
  - echo deploy started %time%
  - cd %APPVEYOR_BUILD_FOLDER%
  - rd build /s/q
  - mkdir build
  - cd build
  - conda config --set always_yes yes --set changeps1 no
  - echo deploy install started %time%
  - conda install -c conda-forge conda-build anaconda-client
  - echo deploy update started %time%
  - conda update libarchive
  - if "%APPVEYOR_REPO_TAG%"=="true" set LABEL=main
  - if "%APPVEYOR_REPO_TAG%"=="false" if "%APPVEYOR_REPO_BRANCH%"=="master" set LABEL=dev
  - echo using label %LABEL%
  - echo deploy build started %time%
  - conda-build --user scipp --token %ANACONDA_TOKEN% --label %LABEL% --channel conda-forge --no-remove-work-dir ../conda



