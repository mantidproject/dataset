trigger:
  branches:
    exclude:
      - "*"

pr:
  autoCancel: true
  branches:
    include:
      - master

stages:
  - template: templates/code_quality_checks.yml

#   - stage: 'build_and_test'
#     displayName: 'Conda Package Build and Unit Tests'

#     jobs:
#       - job: 'linux'
#         displayName: 'Linux'
#         timeoutInMinutes: 60
#         pool:
#           vmImage: 'ubuntu-18.04'
#         steps:
#           - checkout: self
#             submodules: true
#           - bash: |
#               echo "##vso[task.prependpath]$CONDA/bin"
#               echo "##vso[task.setvariable variable=conda_dir]$CONDA"
#             displayName: Configure Conda directories
#           - bash: |
#               set -ex
#               conda --version
#               conda install --yes conda-build
#             displayName: 'Conda configuration'
#           - bash: |
#               conda build -c conda-forge ./conda
#             displayName: 'Package build'
#           - task: PublishBuildArtifacts@1
#             inputs:
#               PathtoPublish: "$(conda_dir)/conda-bld/linux-64"
#               ArtifactName: 'linux-64'
#             displayName: 'Publish Conda package artefacts'

      # - job: 'mac'
      #   displayName: 'Mac OS'
      #   timeoutInMinutes: 80
      #   pool:
      #     vmImage: 'macOS-10.14'
      #   steps:
      #     - checkout: self
      #       submodules: true
      #     - bash: |
      #         echo "##vso[task.prependpath]$CONDA/bin"
      #         echo "##vso[task.setvariable variable=conda_dir]$CONDA"
      #       displayName: Configure Conda directories
      #     - bash: sudo chown -R $USER $CONDA
      #       displayName: Take ownership of Conda installation
      #     - bash: |
      #         set -ex
      #         conda --version
      #         conda install --yes conda-build
      #       displayName: 'Conda configuration'
      #     - bash: |
      #         OSX_VERSION=10.15 conda build -c conda-forge ./conda
      #       displayName: 'Package build'
      #     - task: PublishBuildArtifacts@1
      #       inputs:
      #         PathtoPublish: '$(conda_dir)/conda-bld/osx-64'
      #         ArtifactName: 'osx-64'
      #       displayName: 'Publish Conda package artefacts'

      # - job: 'windows'
      #   displayName: 'Windows'
      #   timeoutInMinutes: 60
      #   pool:
      #     vmImage: 'windows-latest'
      #   steps:
      #     - checkout: self
      #       submodules: true
      #     - powershell: |
      #         Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
      #         Write-Host "##vso[task.setvariable variable=conda_dir]$env:CONDA"
      #       displayName: Configure Conda directories
      #     - script: |
      #         conda --version
      #         conda install --yes conda-build
      #       displayName: 'Conda configuration'
      #     - script: |
      #         conda build -c conda-forge ./conda
      #       displayName: 'Package build'
      #     - task: PublishBuildArtifacts@1
      #       inputs:
      #         PathtoPublish: '$(conda_dir)/conda-bld/win-64'
      #         ArtifactName: 'win-64'
      #       displayName: 'Publish Conda package artefacts'

  - stage: 'post_build_checks'
    displayName: 'Post Build Checks'

    jobs:
      - job: 'documentation'
        displayName: 'Documentation'
        pool:
          vmImage: 'ubuntu-18.04'
        variables:
          packages_dir: '$(Build.StagingDirectory)/packages'
          docs_dir: '$(Build.StagingDirectory)/docs'
        steps:
          - bash: |
              set -ex
              mkdir -p "$(packages_dir)"
              mkdir -p "$(docs_dir)"
            displayName: 'Make directories'
          # - task: DownloadBuildArtifacts@0
          #   inputs:
          #     buildType: 'current'
          #     specificBuildWithTriggering: true
          #     downloadType: 'single'
          #     artifactName: 'linux-64'
          #     downloadPath: '$(packages_dir)'
          - bash: |
              set -ex
              cd "$(packages_dir)"
              wget 'https://anaconda.org/scipp/scipp/0.2/download/linux-64/scipp-0.2-py37_631.tar.bz2'
          - bash: echo "##vso[task.prependpath]$CONDA/bin"
            displayName: Add Conda to PATH
          - bash: conda env create -n scipp_docs -f docs/environment.yml
            displayName: 'Create Conda environment'
          - bash: source activate scipp_docs
            displayName: 'Activate Conda environment'
          - bash: conda install "$(packages_dir)/"scipp-*.tar.bz2
            displayName: 'Install Scipp package'
          - bash: |
              set -ex
              cd docs
              sphinx-build . "$(docs_dir)"
            displayName: 'Build documentation'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(docs_dir)'
              ArtifactName: 'docs'
            displayName: 'Publish documentation artefacts'
